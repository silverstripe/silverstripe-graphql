---
Name: graphqlconfig
---
# Define the type parsers
SilverStripe\Core\Injector\Injector:
  SilverStripe\GraphQL\QueryHandler\QueryHandlerInterface:
    class: SilverStripe\GraphQL\QueryHandler\QueryHandler
  SilverStripe\GraphQL\Middleware\QueryMiddleware.csrf:
    class: SilverStripe\GraphQL\Middleware\CSRFMiddleware
  SilverStripe\GraphQL\Middleware\QueryMiddleware.httpMethod:
    class: SilverStripe\GraphQL\Middleware\HTTPMethodMiddleware
  SilverStripe\GraphQL\PersistedQuery\PersistedQueryMappingProvider:
    class: SilverStripe\GraphQL\PersistedQuery\JSONStringProvider
  SilverStripe\GraphQL\PersistedQuery\HTTPProvider:
    constructor:
      httpClient: '%$SilverStripe\GraphQL\PersistedQuery\GuzzleHTTPClient'
  SilverStripe\GraphQL\Schema\Interfaces\SchemaStorageInterface:
    class: 'SilverStripe\GraphQL\Schema\Storage\FileSchemaStore'
  Psr\SimpleCache\CacheInterface.FileSchemaStore:
    factory: SilverStripe\Core\Cache\CacheFactory
    constructor:
      namespace: "GraphQLSchema"


  # Set up a default endpoint that can be activated with a Director rule
  SilverStripe\GraphQL\Schema\Schema.default:
    class: SilverStripe\GraphQL\Schema\Schema
    constructor:
      schemaKey: default
  SilverStripe\GraphQL\Controller.default:
    class: SilverStripe\GraphQL\Controller
    constructor:
      schema: '%$SilverStripe\GraphQL\Schema\Schema.default'
      queryHandler: '%$SilverStripe\GraphQL\QueryHandler\QueryHandlerInterface'


SilverStripe\GraphQL\Controller:
  extensions:
    - SilverStripe\GraphQL\Extensions\IntrospectionProvider
SilverStripe\GraphQL\Schema\Schema:
  schemas: []
---
Only:
  moduleexists: 'silverstripe/admin'
---
SilverStripe\Admin\LeftAndMain:
  extensions:
    - SilverStripe\GraphQL\Extensions\ClientConfigProvider
