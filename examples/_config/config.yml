SilverStripe\GraphQL\Manager:
  schemas:
    default:
      types:
        member: 'MyProject\GraphQL\MemberTypeCreator'
        group: 'MyProject\GraphQL\GroupTypeCreator'
      queries:
        readMembers: 'MyProject\GraphQL\ReadMembersQueryCreator'
        paginatedReadMembers: 'MyProject\GraphQL\PaginatedReadMembersQueryCreator'
      mutations:
        createMember: 'MyProject\GraphQL\CreateMemberMutationCreator'
      scaffolding_providers:
        - MyProject\Post
      scaffolding:
        types:
          MyProject\Post:
            fields: [ID, Title, Content, Author, Date]
            nestedQueries:
              Comments:
                args:
                  Today: Boolean
                sortableFields: [Author]
                resolver: MyProject\CommentsResolver
              Files: true
            operations:
              create: true
              read:
                args:
                  StartingWith: String
                resolver: MyProject\ReadResolver
          SilverStripe\Security\Member:
            fields: [Name, FirstName, Surname, Email]
          SilverStripe\Assets\File:
            fieldsExcept: [Content]
            fields: [File]
          MyProject\Comment:
            fields: [Comment, Author]
          SilverStripe\CMS\Model\RedirectorPage:
            fields: [ExternalURL, Content]
            operations:
              read: true
              create: true
        mutations:
          updatePostTitle:
            type: MyProject\Post
            args:
              ID: ID!
              NewTitle: String!
            resolver: MyProject\UpdatePostResolver
        queries:
          latestPost:
            type: MyProject\Post
            paginate: false
            resolver: MyProject\LatestPostResolver

  # Enforce HTTP basic authentication for GraphQL requests
  authenticators:
    class: SilverStripe\GraphQL\Auth\BasicAuthAuthenticator
    priority: 10
